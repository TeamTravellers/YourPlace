<style>
    .filter-container {
        position: fixed;
        top: 70px;
        left: 50%;
        transform: translateX(-50%);
        width: 30%;
        background-color: gray;
        border-radius: 8px;
        z-index: 1000;
        padding: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}
.filters{
    display: flex;
    justify-content: space-evenly;
    flex-direction: column;
    align-items: stretch;
}
</style>

<ul class="navbar-nav">
    <li class="nav-item">
        <form id="testForm" class="form-inline">
            <button id="test" type="submit" class="nav-link btn btn-link text-dark filter">Filters</button>
        </form>
    </li>
    <li class="nav-item">
        <form id="testForm" class="form-inline">
            <button id="test" type="submit" class="nav-link btn btn-link text-dark">Map</button>
        </form>
    </li>
    @if (ViewContext.RouteData.Values["Filters"] != null && ViewContext.RouteData.Values["Filters"].ToString() == "FiltersController")
    {
        @await Html.PartialAsync("_FiltersPartial")
    }
</ul>

<div class="filter-container" style="display: none;">
    <div class="filters">
        <label class="filter-label" for="price">Price:</label>
        <input class="filter-input" type="range" id="price" min="0" max="10000" step="100" value="0">
        <span id="selected-price">0</span> lv
        <br>

        <label class="filter-label" for="country">Country:</label>
        <input class="filter-input" type="text" id="country">

        <label class="filter-label" for="num-of-people">Number of People:</label>
        <div>
            <button class="btn" onclick="changeNumberOfPeople(-1)">-</button>
            <input class="number-input" type="number" id="num-of-people" value="1">
            <button class="btn" onclick="changeNumberOfPeople(1)">+</button>
        </div>

        <label for="date-from">From:</label>
        <input class="date-input" type="date" id="date-from" min="" onchange="setMinDate('date-to', this.value)">
        <label for="date-to">To:</label>
        <input class="date-input" type="date" id="date-to" min="" onchange="setMaxDate('date-from', this.value)">

        <button class="clear" onclick="clearFilters()">Изчисти</button>
        <button class="apply">Приложи</button>
    </div>
</div>

<script>
    function clearFilters() {
        document.getElementById('price').value = 0;
        document.getElementById('selected-price').innerText = '0';
        document.getElementById('country').value = '';
        document.getElementById('num-of-people').value = 1;
        document.getElementById('date-from').value = '';
        document.getElementById('date-to').value = '';
    }

    var filterButton = document.querySelector('.filter');
    var filterContainer = document.querySelector('.filter-container');

    filterButton.addEventListener('click', function () {
        if (filterContainer.style.display === 'none' || filterContainer.style.display === '') {
            filterContainer.style.display = 'block';
        } else {
            filterContainer.style.display = 'none';
        }
    });

    var redirectButton = document.getElementById('openOffers');
    redirectButton.addEventListener('click', function() {
        window.location.href = 'offer.html';
    });

    const priceInput = document.getElementById('price');
    const selectedPrice = document.getElementById('selected-price');
    const numOfPeopleInput = document.getElementById('num-of-people');

    priceInput.addEventListener('input', (event) => {
        selectedPrice.textContent = event.target.value;
    });

    function changeNumberOfPeople(change) {
        let currentValue = parseInt(numOfPeopleInput.value, 10);
        currentValue += change;

        if (currentValue < 1) {
            currentValue = 1;
        }

        numOfPeopleInput.value = currentValue;
    }

    function setMinDate(elementId, minValue) {
        const element = document.getElementById(elementId);
        element.setAttribute('min', minValue);
    }

    function setMaxDate(elementId, maxValue) {
        const element = document.getElementById(elementId);
        element.setAttribute('max', maxValue);
    }
</script>
