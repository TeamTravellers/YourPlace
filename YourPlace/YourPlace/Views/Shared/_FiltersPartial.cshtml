@model AllHotelsModel
@{
    ViewData["Title"] = "Filter";
    DateTime tomorrow = DateTime.Today.AddDays(1);
    string tomorrowDateString = tomorrow.ToString("yyyy-MM-dd");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Filters Menu</title>
    <style>
        

    *{
        padding: 0;
        margin: 0;
        box-sizing: border-box;
        font-family: 'Mulish', sans-serif;
    }

    body{
        height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(to right, #e2e2e2, #c9d6ff);
        flex-direction: row;
        flex-wrap: wrap;
        padding-top: 60px; 
    }

  
      .fade-out {
        opacity: 1;
        transition: opacity 0.4s ease;
    }

    .fade-out.hide {
        opacity: 0;
    }

    button{
        width: fit-content;
        height: fit-content;
        border: 1px solid #6667b0;
        background: #6b43ff;
        color: #fff;
        line-height: 50px;
        font-size: 18px;
        letter-spacing: 0.025em;
        cursor: pointer;
        font-weight: 800;
        border-radius: 8px;
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.15);
        transition: all 0.3s ease;
        padding: 12px, 8px, 12px, 8px;
    }

    .button:hover{
        text-decoration: underline;
    }

    .filter-container {
            position: fixed;
            top: 70px;
            left: 50%;
            transform: translateX(-50%);
            width: 60%;
            background-color: rgb(151, 150, 184);
            border-radius: 8px;
            z-index: 1000;
            padding: 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    .filters{
        display: flex;
        justify-content: space-evenly;
        flex-direction: column;
        align-items: stretch;
    }
    .clear{
        margin-bottom: 1%;
    }
    </style>
</head>
<body>

    <ul class="navbar-nav">
        <li class="nav-item">
            <form id="testForm" class="form-inline">
                <button id="filter" type="button" class="nav-link btn btn-link text-dark filter">Филтриране</button>
            </form>
        </li>
        <li class="nav-item">
            <form id="testForm" class="form-inline">
                <button id="map" type="submit" class="nav-link btn btn-link text-dark">Карта</button>
            </form>
        </li>
    </ul>

    <div class="filter-container" style="display: none;">
        <div class="filters">
            
                <label class="filter-label" for="price" @* asp-for="Price" *@>Цена:</label>
                <input class="filter-input" type="range" id="price" min="0" max="10000" step="100" value="0" value="@(Model == null ? "" : Model.Price)">
                <span id="selected-price">0</span> 
                <div class="lv">лв.</div>
            
                <label class="filter-label" for="country" @* asp-for="Country" *@>Country:</label>
                <input class="filter-input" type="text" id="country" value="@(Model == null ? "" : Model.Country)">

                <label class="filter-label" for="num-of-people" @* asp-for="PeopleCount" *@>Брой хора:</label>
                <div>
                    <button class="btn" onclick="changeNumberOfPeople(-1)">-</button>
                    <input class="number-input" type="number" id="num-of-people" value="0" value="@(Model == null ? "" : Model.PeopleCount)" disabled>
                    <button class="btn" onclick="changeNumberOfPeople(1)">+</button>
                </div>

            <div class="form-group">
                <label asp-for="ArrivalDate">Дата на пристигане:</label>
                <input asp-for="ArrivalDate" id="arrivalDate" class="form-control" type="date" min="@DateTime.Today.ToString("yyyy-MM-dd")" value="0" placeholder="Select Arrival Date" />
                <span asp-validation-for="ArrivalDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="LeavingDate">Дата на напускане:</label>
                <input asp-for="LeavingDate" id="leavingDate" class="form-control" type="date" min="@tomorrowDateString" value="0" placeholder="Select Leaving Date" />
                <span asp-validation-for="LeavingDate" class="text-danger"></span>
            </div>
                <br>
                <button class="clear" onclick="clearFilters()">Изчисти</button>

                <form class="filters" asp-controller="Sorting" asp-action="Filter" method="post">
                        <input type="hidden" id="hidden-price" name="price" asp-for="Price">
                        <input type="hidden" id="hidden-country" name="country" asp-for="Country">
                        <input type="hidden" id="hidden-peopleCount" name="peopleCount" asp-for="PeopleCount">
                        <input type="hidden" id="hidden-date-from" name="date-from" asp-for="ArrivalDate">
                        <input type="hidden" id="hidden-date-to" name="date-to" asp-for="LeavingDate">
                        <button type="submit" class="apply">Приложи</button>
                   
                 </form> 
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var filterButton = document.querySelector('.filter');
            var filterContainer = document.querySelector('.filter-container');

            filterButton.addEventListener('click', function (event) {
                event.stopPropagation(); 
                toggleFilters();
            });

            function toggleFilters() {
                if (filterContainer.style.display === 'none') {
                    filterContainer.style.display = 'block';
                    document.addEventListener('click', closeFiltersOnClickOutside);
                } else {
                    filterContainer.style.display = 'none';
                    document.removeEventListener('click', closeFiltersOnClickOutside);
                }
            }

            function closeFiltersOnClickOutside(event) {
                if (!filterContainer.contains(event.target) && event.target !== filterButton) {
                    filterContainer.style.display = 'none';
                    document.removeEventListener('click', closeFiltersOnClickOutside);
                }
            }
        });

        function clearFilters() {
            document.getElementById('price').value = 0;
            document.getElementById('selected-price').innerText = '0';
            document.getElementById('country').value = '';
            document.getElementById('num-of-people').value = 0;
            document.getElementById('date-from').value = '';
            document.getElementById('date-to').value = '';
        }

        var priceInput = document.getElementById('price');
        var selectedPrice = document.getElementById('selected-price');
        
        var hiddenPriceInput = document.getElementById('hidden-price');

        priceInput.addEventListener('input', (event) => {
            selectedPrice.textContent = event.target.value;
            hiddenPriceInput.value = event.target.value;
            console.log(hiddenPriceInput.value);
        });

        var countryInput = document.getElementById('country');
        var hiddenCountryInput = document.getElementById('hidden-country');

        countryInput.addEventListener('input', (event) => {
            hiddenCountryInput.value = event.target.value;
            console.log(hiddenCountryInput.value);
        })

        var numOfPeopleInput = document.getElementById('num-of-people');
        var hiddenPeopleCountInput = document.getElementById('hidden-peopleCount');
        function changeNumberOfPeople(change) {
            let currentValue = parseInt(numOfPeopleInput.value, 10);
            currentValue += change;

            if (currentValue < 1) {
                currentValue = 1;
            }

            numOfPeopleInput.value = currentValue;
            hiddenPeopleCountInput.value = currentValue;
            console.log(hiddenPeopleCountInput.value);
        }


        var dateFromInput = document.getElementById('arrivalDate'); 
        var hiddenDateFromInput = document.getElementById('hidden-date-from');

        var dateToInput = document.getElementById('leavingDate');
        var hiddenDateToInput = document.getElementById('hidden-date-to');


        dateFromInput.addEventListener('input', (event) => {
            hiddenDateFromInput.value = event.target.value;
        });

        dateToInput.addEventListener('input', (event) => {
            hiddenDateToInput.value = event.target.value;
        });

       
   
        var applyForm = document.querySelector('.filters');

        applyForm.addEventListener('submit', function (event) {
            var inputs = document.querySelectorAll('.filter-input, #arrivalDate, #leavingDate');
            var isEmpty = true;

            inputs.forEach(function (input) {
                if (input.type === 'date') {
                    if (input.value !== '') {
                        isEmpty = false;
                    }
                } else if (input.type === 'range' && input.value !== '0') {
                    isEmpty = false;
                } else if (input.type === 'text' && input.value.trim() !== '') {
                    isEmpty = false;
                } else if (input.type === 'number' && input.value !== '0') {
                    isEmpty = false;
                }
            });

            if (isEmpty) {
                event.preventDefault(); 
                alert('Моля, попълнете формуляра!');
            }
        });

        document.getElementById('submit-button').addEventListener('submit', function (event) {
            var arrivalDate = new Date(document.getElementById('arrivalDate').value);
            var leavingDate = new Date(document.getElementById('leavingDate').value);

            if (arrivalDate >= leavingDate) {
                alert('Дата на напускане трябва да бъде по-късна от датата на пристигане.');
                event.preventDefault();
            }
        });

    </script>
</body>
</html>
